{"version":3,"sources":["webpack:///src/app/cep/Cep.page.html","webpack:///src/app/cep/Cep.page.scss","webpack:///src/app/cep/cep-routing.module.ts","webpack:///src/app/cep/cep.module.ts","webpack:///src/app/cep/cep.page.ts","webpack:///src/app/services/cep/cep.service.ts"],"names":["routes","path","component","CepPageRoutingModule","imports","forChild","exports","CepPageModule","declarations","CepPage","alertController","formBuilder","cepService","formCep","group","compose","required","titulo","mensagem","create","header","message","buttons","alert","address","buscaEnderecoCEP","controls","value","then","resposta","converterRespostaParaCep","endereco","mostraAlerta","selector","template","CepService","httpClient","storageService","cep","url","get","toPromise","cepNaResposta","logradouro","bairro","localidade","uf","insereStorage","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIf,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;AAWA,QAAaC,oBAAoB;AAAA;AAAA,KAAjC;;AAAaA,wBAAoB,6DAJhC,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAIgC,GAApBH,oBAAoB,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIb,QAAaI,aAAa;AAAA;AAAA,KAA1B;;AAAaA,iBAAa,6DAVzB,+DAAS;AACRH,aAAO,EAAE,CACP,0DADO,EAEP,4DAFO,EAGP,0DAHO,EAIP,wEAJO,EAKP,kEALO,CADD;AAQRI,kBAAY,EAAE,CAAC,iDAAD;AARN,KAAT,CAUyB,GAAbD,aAAa,CAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTb,QAAaE,OAAO;AAKlB,uBAAmBC,eAAnB,EAA6DC,WAA7D,EAA+FC,UAA/F,EAAuH;AAAA;;AAApG,aAAAF,eAAA,GAAAA,eAAA;AAA0C,aAAAC,WAAA,GAAAA,WAAA;AAAkC,aAAAC,UAAA,GAAAA,UAAA;AAC7F,aAAKC,OAAL,GAAe,KAAKF,WAAL,CAAiBG,KAAjB,CAAuB;AACpC,iBAAO,CAAC,IAAD,EAAO,0DAAWC,OAAX,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB,CAAP;AAD6B,SAAvB,CAAf;AAGD;;AATiB;AAAA;AAAA,qCAWCC,MAXD,EAWiBC,QAXjB,EAWmC;;;;;;;;AACnC,2BAAM,KAAKR,eAAL,CAAqBS,MAArB,CAA4B;AAC9CC,4BAAM,EAAEH,MADsC;AAE9CI,6BAAO,EAAEH,QAFqC;AAG9CI,6BAAO,EAAE,CAAC,IAAD;AAHqC,qBAA5B,CAAN;;;AAARC,yB;;;;;;;;;AAKP;AAjBe;AAAA;AAAA,2CAmBM;;;;;;;;;AAChBC,2B,GAAU,E;;AACd,2BAAM,KAAKZ,UAAL,CAAgBa,gBAAhB,CAAiC,KAAKZ,OAAL,CAAaa,QAAb,CAAsB,KAAtB,EAA6BC,KAA9D,EAAqEC,IAArE,CAA0E,UAACC,QAAD,EAAY;AAAEL,6BAAO,GAAG,KAAI,CAACZ,UAAL,CAAgBkB,wBAAhB,CAAyCD,QAAzC,CAAV;AAC5F,2BAAI,CAACE,QAAL,GAAgBP,OAAhB;AACD,qBAFK,WAEG,YAAI;AACX,2BAAI,CAACQ,YAAL,CAAkB,MAAlB,EAA0B,qBAA1B;AACD,qBAJK,CAAN;;;;;;;;;AAKD;AA1Be;;AAAA;AAAA,OAApB;;;;cAKsC;;cAAsC;;cAAiC;;;;AALhGvB,WAAO,6DALnB,gEAAU;AACTwB,cAAQ,EAAE,SADD;AAETC,cAAQ,EAAR;AAAA;AAAA,sFAFS;;;;AAAA,KAAV,CAKmB,GAAPzB,OAAO,CAAP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHb,QAAa0B,UAAU;AAErB,0BAAoBC,UAApB,EAAmDC,cAAnD,EAAmF;AAAA;;AAA/D,aAAAD,UAAA,GAAAA,UAAA;AAA+B,aAAAC,cAAA,GAAAA,cAAA;AAAmC;;AAFjE;AAAA;AAAA,yCAIEC,GAJF,EAIe;;;;;;;AAC5BC,uB,GAAK,8BAA6BD,GAA7B,GAAmC,O;sDACvC,KAAKF,UAAL,CAAgBI,GAAhB,CAAoBD,GAApB,EAAyBE,SAAzB,E;;;;;;;;;AACR;AAPoB;AAAA;AAAA,iDASWC,aATX,EAS4B;AAC/C,cAAIX,QAAQ,GAAGW,aAAa,CAACC,UAAd,GAA2B,IAA3B,GAAkCD,aAAa,CAACE,MAAhD,GAAyD,IAAzD,GAAgEF,aAAa,CAACG,UAA9E,GAA2F,KAA3F,GAAmGH,aAAa,CAACI,EAAhI;AACA,eAAKT,cAAL,CAAoBU,aAApB,CAAkC,UAAlC,EAA8ChB,QAA9C;AACA,iBAAOA,QAAP;AACD;AAboB;;AAAA;AAAA,OAAvB;;;;cAEiC;;cAAoC;;;;AAFxDI,cAAU,6DAHtB,iEAAW;AACVa,gBAAU,EAAE;AADF,KAAX,CAGsB,GAAVb,UAAU,CAAV","file":"cep-cep-module-es5.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-title>\\n      Busca de CEP\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-header collapse=\\\"condense\\\">\\n    <ion-toolbar>\\n      <ion-title size=\\\"large\\\">Busca de CEP</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n  <form [formGroup]=\\\"formCep\\\" (ngSubmit)=\\\"buscaEnderecoCEP()\\\">\\n  <ion-item>\\n    <div style=\\\"justify-content: space-between;\\\">\\n      <ion-input placeholder=\\\"Informe o CEP do endereço\\\" type=\\\"text\\\" formControlName=\\\"cep\\\"></ion-input>    \\n      <div *ngIf=\\\"formCep.controls.cep.errors\\\">\\n        <span *ngIf=\\\"formCep.controls.cep.errors.required\\\"><small>Campo obrigatório</small></span>\\n      </div>  \\n      <ion-button type=\\\"submit\\\" color=\\\"primary\\\" [disabled]=\\\"!formCep.valid\\\" size=\\\"small\\\">Buscar</ion-button>\\n    </div>\\n  </ion-item>\\n  <ion-item>\\n    <div style=\\\"justify-content: space-between;\\\">\\n      <ion-label>{{endereco}}</ion-label>\\n    </div>\\n  </ion-item>\\n</form>\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NlcC9DZXAucGFnZS5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CepPage } from './cep.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CepPage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CepPageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport {  ReactiveFormsModule } from '@angular/forms';\nimport { CepPage } from './cep.page';\n\nimport { CepPageRoutingModule } from './cep-routing.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    CepPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [CepPage]\n})\nexport class CepPageModule {}\n","import { Component } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { CepService } from '../services/cep/cep.service';\n \n@Component({\n  selector: 'app-Cep',\n  templateUrl: 'Cep.page.html',\n  styleUrls: ['Cep.page.scss']\n})\nexport class CepPage {\n \n  public formCep: FormGroup;\n  endereco: string;\n \n  constructor(public alertController: AlertController, private formBuilder: FormBuilder, private cepService: CepService) {\n    this.formCep = this.formBuilder.group({\n      'cep': [null, Validators.compose([Validators.required])]\n    });\n  }\n \n  async mostraAlerta(titulo: string, mensagem: string) {\n      const alert = await this.alertController.create({\n        header: titulo,\n        message: mensagem,\n        buttons: ['OK']\n      });\n    }\n \n    async buscaEnderecoCEP(){\n      let address = \"\";\n      await this.cepService.buscaEnderecoCEP(this.formCep.controls[\"cep\"].value).then((resposta)=>{ address = this.cepService.converterRespostaParaCep(resposta);\n        this.endereco = address;\n      }).catch(()=>{\n        this.mostraAlerta(\"Erro\", \"Cep não encontrado!\");\n      }); \n    }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { StorageService } from '../storage/storage.service';\n \n@Injectable({\n  providedIn: 'root'\n})\nexport class CepService {\n \n  constructor(private httpClient:HttpClient, private storageService: StorageService) { }\n \n  async buscaEnderecoCEP(cep: string) {\n    const url ='https://viacep.com.br/ws/'+ cep + '/json';\n    return this.httpClient.get(url).toPromise();\n  }\n \n  public converterRespostaParaCep(cepNaResposta:any){\n    let endereco = cepNaResposta.logradouro + \", \" + cepNaResposta.bairro + \", \" + cepNaResposta.localidade + \" - \" + cepNaResposta.uf;\n    this.storageService.insereStorage(\"endereco\", endereco);\n    return endereco;\n  }\n}\n"]}