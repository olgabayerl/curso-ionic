{"version":3,"sources":["webpack:///src/app/cep/Cep.page.html","webpack:///src/app/cep/Cep.page.scss","webpack:///src/app/cep/cep-routing.module.ts","webpack:///src/app/cep/cep.module.ts","webpack:///src/app/cep/cep.page.ts","webpack:///src/app/services/cep/cep.service.ts"],"names":["routes","path","component","CepPageRoutingModule","imports","forChild","exports","CepPageModule","declarations","CepPage","alertController","formBuilder","cepService","formCep","group","compose","required","titulo","mensagem","create","header","message","buttons","alert","address","buscaEnderecoCEP","controls","value","then","resposta","converterRespostaParaCep","endereco","mostraAlerta","selector","template","CepService","httpClient","storageService","cep","url","get","toPromise","cepNaResposta","logradouro","bairro","localidade","uf","insereStorage","providedIn"],"mappings":"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","file":"cep-cep-module-es5.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-title>\\r\\n      Busca de CEP\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content [fullscreen]=\\\"true\\\">\\r\\n  <ion-header collapse=\\\"condense\\\">\\r\\n    <ion-toolbar>\\r\\n      <ion-title size=\\\"large\\\">Busca de CEP</ion-title>\\r\\n    </ion-toolbar>\\r\\n  </ion-header>\\r\\n  <form [formGroup]=\\\"formCep\\\" (ngSubmit)=\\\"buscaEnderecoCEP()\\\">\\r\\n  <ion-item>\\r\\n    <div style=\\\"justify-content: space-between;\\\">\\r\\n      <ion-input placeholder=\\\"Informe o CEP do endereço\\\" type=\\\"text\\\" formControlName=\\\"cep\\\"></ion-input>    \\r\\n      <div *ngIf=\\\"formCep.controls.cep.errors\\\">\\r\\n        <span *ngIf=\\\"formCep.controls.cep.errors.required\\\"><small>Campo obrigatório</small></span>\\r\\n      </div>  \\r\\n      <ion-button type=\\\"submit\\\" color=\\\"primary\\\" [disabled]=\\\"!formCep.valid\\\" size=\\\"small\\\">Buscar</ion-button>\\r\\n    </div>\\r\\n  </ion-item>\\r\\n  <ion-item>\\r\\n    <div style=\\\"justify-content: space-between;\\\">\\r\\n      <ion-label>{{endereco}}</ion-label>\\r\\n    </div>\\r\\n  </ion-item>\\r\\n</form>\\r\\n</ion-content>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NlcC9DZXAucGFnZS5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CepPage } from './cep.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CepPage,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CepPageRoutingModule {}\r\n","import { IonicModule } from '@ionic/angular';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport {  ReactiveFormsModule } from '@angular/forms';\r\nimport { CepPage } from './cep.page';\r\n\r\nimport { CepPageRoutingModule } from './cep-routing.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    CepPageRoutingModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [CepPage]\r\n})\r\nexport class CepPageModule {}\r\n","import { Component } from '@angular/core';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { CepService } from '../services/cep/cep.service';\r\n \r\n@Component({\r\n  selector: 'app-Cep',\r\n  templateUrl: 'Cep.page.html',\r\n  styleUrls: ['Cep.page.scss']\r\n})\r\nexport class CepPage {\r\n \r\n  public formCep: FormGroup;\r\n  endereco: string;\r\n \r\n  constructor(public alertController: AlertController, private formBuilder: FormBuilder, private cepService: CepService) {\r\n    this.formCep = this.formBuilder.group({\r\n      'cep': [null, Validators.compose([Validators.required])]\r\n    });\r\n  }\r\n \r\n  async mostraAlerta(titulo: string, mensagem: string) {\r\n      const alert = await this.alertController.create({\r\n        header: titulo,\r\n        message: mensagem,\r\n        buttons: ['OK']\r\n      });\r\n    }\r\n \r\n    async buscaEnderecoCEP(){\r\n      let address = \"\";\r\n      await this.cepService.buscaEnderecoCEP(this.formCep.controls[\"cep\"].value).then((resposta)=>{ address = this.cepService.converterRespostaParaCep(resposta);\r\n        this.endereco = address;\r\n      }).catch(()=>{\r\n        this.mostraAlerta(\"Erro\", \"Cep não encontrado!\");\r\n      }); \r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { StorageService } from '../storage/storage.service';\r\n \r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CepService {\r\n \r\n  constructor(private httpClient:HttpClient, private storageService: StorageService) { }\r\n \r\n  async buscaEnderecoCEP(cep: string) {\r\n    const url ='https://viacep.com.br/ws/'+ cep + '/json';\r\n    return this.httpClient.get(url).toPromise();\r\n  }\r\n \r\n  public converterRespostaParaCep(cepNaResposta:any){\r\n    let endereco = cepNaResposta.logradouro + \", \" + cepNaResposta.bairro + \", \" + cepNaResposta.localidade + \" - \" + cepNaResposta.uf;\r\n    this.storageService.insereStorage(\"endereco\", endereco);\r\n    return endereco;\r\n  }\r\n}\r\n"]}