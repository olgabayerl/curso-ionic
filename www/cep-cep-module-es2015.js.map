{"version":3,"sources":["./src/app/cep/Cep.page.html","./src/app/cep/Cep.page.scss","./src/app/cep/cep-routing.module.ts","./src/app/cep/cep.module.ts","./src/app/cep/cep.page.ts","./src/app/services/cep/cep.service.ts"],"names":[],"mappings":"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","file":"cep-cep-module-es2015.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-title>\\r\\n      Busca de CEP\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content [fullscreen]=\\\"true\\\">\\r\\n  <ion-header collapse=\\\"condense\\\">\\r\\n    <ion-toolbar>\\r\\n      <ion-title size=\\\"large\\\">Busca de CEP</ion-title>\\r\\n    </ion-toolbar>\\r\\n  </ion-header>\\r\\n  <form [formGroup]=\\\"formCep\\\" (ngSubmit)=\\\"buscaEnderecoCEP()\\\">\\r\\n  <ion-item>\\r\\n    <div style=\\\"justify-content: space-between;\\\">\\r\\n      <ion-input placeholder=\\\"Informe o CEP do endereço\\\" type=\\\"text\\\" formControlName=\\\"cep\\\"></ion-input>    \\r\\n      <div *ngIf=\\\"formCep.controls.cep.errors\\\">\\r\\n        <span *ngIf=\\\"formCep.controls.cep.errors.required\\\"><small>Campo obrigatório</small></span>\\r\\n      </div>  \\r\\n      <ion-button type=\\\"submit\\\" color=\\\"primary\\\" [disabled]=\\\"!formCep.valid\\\" size=\\\"small\\\">Buscar</ion-button>\\r\\n    </div>\\r\\n  </ion-item>\\r\\n  <ion-item>\\r\\n    <div style=\\\"justify-content: space-between;\\\">\\r\\n      <ion-label>{{endereco}}</ion-label>\\r\\n    </div>\\r\\n  </ion-item>\\r\\n</form>\\r\\n</ion-content>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NlcC9DZXAucGFnZS5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CepPage } from './cep.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CepPage,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CepPageRoutingModule {}\r\n","import { IonicModule } from '@ionic/angular';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport {  ReactiveFormsModule } from '@angular/forms';\r\nimport { CepPage } from './cep.page';\r\n\r\nimport { CepPageRoutingModule } from './cep-routing.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    CepPageRoutingModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [CepPage]\r\n})\r\nexport class CepPageModule {}\r\n","import { Component } from '@angular/core';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { CepService } from '../services/cep/cep.service';\r\n \r\n@Component({\r\n  selector: 'app-Cep',\r\n  templateUrl: 'Cep.page.html',\r\n  styleUrls: ['Cep.page.scss']\r\n})\r\nexport class CepPage {\r\n \r\n  public formCep: FormGroup;\r\n  endereco: string;\r\n \r\n  constructor(public alertController: AlertController, private formBuilder: FormBuilder, private cepService: CepService) {\r\n    this.formCep = this.formBuilder.group({\r\n      'cep': [null, Validators.compose([Validators.required])]\r\n    });\r\n  }\r\n \r\n  async mostraAlerta(titulo: string, mensagem: string) {\r\n      const alert = await this.alertController.create({\r\n        header: titulo,\r\n        message: mensagem,\r\n        buttons: ['OK']\r\n      });\r\n    }\r\n \r\n    async buscaEnderecoCEP(){\r\n      let address = \"\";\r\n      await this.cepService.buscaEnderecoCEP(this.formCep.controls[\"cep\"].value).then((resposta)=>{ address = this.cepService.converterRespostaParaCep(resposta);\r\n        this.endereco = address;\r\n      }).catch(()=>{\r\n        this.mostraAlerta(\"Erro\", \"Cep não encontrado!\");\r\n      }); \r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { StorageService } from '../storage/storage.service';\r\n \r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CepService {\r\n \r\n  constructor(private httpClient:HttpClient, private storageService: StorageService) { }\r\n \r\n  async buscaEnderecoCEP(cep: string) {\r\n    const url ='https://viacep.com.br/ws/'+ cep + '/json';\r\n    return this.httpClient.get(url).toPromise();\r\n  }\r\n \r\n  public converterRespostaParaCep(cepNaResposta:any){\r\n    let endereco = cepNaResposta.logradouro + \", \" + cepNaResposta.bairro + \", \" + cepNaResposta.localidade + \" - \" + cepNaResposta.uf;\r\n    this.storageService.insereStorage(\"endereco\", endereco);\r\n    return endereco;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}